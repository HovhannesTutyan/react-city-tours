//////index.js///////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                    BASICS
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import React from 'react';
import ReactDOM from 'react-dom';

function Greeting() {
    return <h4> this is hong and this is my first component </h4>
}
ReactDOM.render(<Greeting />, document.getElementById("root")); // what component to render and where

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const names = ["john", "peter", "susan"]
const newNames = names.map((name)=>{
    return <h1> {name} </h1>
})
console.log(newNames)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const Greeting = () => {
    return React.createElement('h1', {}, 'hello world');
}
ReactDOM.render(<Greeting />, document.getElementById("root"));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                            JSX RULES
JSX always returns a single element (one wrapping React.Fragment or div or section in return function).
Use camelCase for events (onClick) and for classes (className).
Close every element (img/, input/).
Formatting (return ( <div> ...</div>))
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                            NESTED COMPONENTS
import React from 'react';
import ReactDOM from 'react-dom';

const firstBook = {
    img: "https://i.ebayimg.com/thumbs/images/g/WxQAAOSwL7lecnvI/s-l225.webp",
    title: "I love you to the moon",
    author: "Amelia Hepworth"
}

function BookList (){
    return (
        <section>
            <Book job='developer'/>
            <Book title = "random title" number={22}/>
            <Book author = {firstBook.author} job='developer'/>
        </section>
    );
}

const Book = (props) => {
    console.log(props) // developer, title = "random title" number={22}
    return (
        <article>
            <Image />
            {title} // in this case functions can be dynamically changed, but not this js values
            <Author />
            {props.job} // developer will be drowned under first and third Book
            {props.author} // author name will be drowned under third Book
        </article>
    );
};

const Image = () => <img src="https://i.ebayimg.com/thumbs/images/g/WxQAAOSwL7lecnvI/s-l225.webp" alt=""/>
const title = <h1> I Love you to the moon </h1>;
const Author = () => {
    return (
        <h4 style={{color: '#617d98', fontSize: '0.75rem', marginTop: '0.25rem' }}> Amelia Hepworth </h4>
    )
}
ReactDOM.render(<BookList />, document.getElementById("root"));
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                PROPS AND DESTRUCTURING
import React from 'react';
import ReactDOM from 'react-dom';

const firstBook = {
    img: "https://i.ebayimg.com/thumbs/images/g/WxQAAOSwL7lecnvI/s-l225.webp",
    title: "I love you to the moon",
    author: "Amelia Hepworth"
}
const secondBook = {
    img: "https://i.ebayimg.com/thumbs/images/g/WxQAAOSwL7lecnvI/s-l225.webp",
    title: "I adsfadsf asdyouadf sdafn",
    author: "Amelia Hepworth"a
}
function BookList (){
    return (
        <section className="booklist">
            <Book
                img = {firstBook.image}
                title = {firstBook.title}
                author = {firstBook.author}
            />
                <div> Lorem ipsum dolor sit amet </div>
            <Book
                img = {secondBook.image}
                title = {secondBook.title}
                author = {secondBook.author}
            />
        </section>
    );
}

const Book = (props) => {
    const { img, title, author } = props;
    return (
        <article className="book">
            <img src={img} alt="" />
            <h1>{title}</h1>
            <h4>{author}</h4>
        </article>
    );
};
            OR
const Book = ({img, title, author, children}) => {
    return (
        <article className="book">
            <img src={img} alt="" />
            <h1>{title}</h1>
            <h4>{author}</h4>
            {children} // div will be shown under the author
        </article>
    );
};


ReactDOM.render(<BookList />, document.getElementById("root"));
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                PROPS LIST, EVENTS

import React from 'react';
import ReactDOM from 'react-dom';

const books = [
    {
        id: 1,
        img: "https://i.ebayimg.com/thumbs/images/g/WxQAAOSwL7lecnvI/s-l225.webp",
        title: "I love you to the moon",
        author: "Amelia Hepworth"
    },
    {
        id: 2,
        img: "https://i.ebayimg.com/thumbs/images/g/WxQAAOSwL7lecnvI/s-l225.webp",
        title: "I adsfadsf asdyouadf sdafn",
        author: "Amelia Hepworth"
    },
];

function BookList (){
    return (
        <section className="booklist">
            {
                books.map((book)=>{
                    const {img, title, author} = book;
                    return (
                        <Book key={ book.id } { ...book }></Book>
                    );
                })
            }
        </section>
    );
}
const clickHandler = () => {
    console.log("hello")
}
const complexExample = (author) => {
    console.log(author)
}
const Book = (props) => {
    const { img, title, author } = props;
    return (
        <article className="book" onMouseOver={()=>{
            console.log(title)
        }}>
            <img src={img} alt="" />
            <h1>{title}</h1>
            <h4>{author}</h4>
            <button type="button" onClick={clickHandler}>
                Example
            </button>
            <button type="button" onClick={() => complexExample(author)}>
                more complex button
            </button>
        </article>
    );
};

ReactDOM.render(<BookList />, document.getElementById("root"));